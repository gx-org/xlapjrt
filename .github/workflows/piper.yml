# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run checks on the piper branch to merge with the main branch.

name: Piper

on:
  push:
    branches: ["piper"]

env:
  GOPJRT_NOSUDO: true
  GOPJRT_INSTALL_DIR: ${{ github.workspace }}/../gopjrtbin
  CGO_CFLAGS: -I${{ github.workspace }}/.. -I $GOPJRT_INSTALL_DIR/include
  CGO_CPPFLAGS: -I${{ github.workspace }}/.. -I $GOPJRT_INSTALL_DIR/include
  CGO_CXXFLAGS: -I${{ github.workspace }}/.. -I $GOPJRT_INSTALL_DIR/include
  CGO_LDFLAGS: -labsl_status -labsl_statusor -L $GOPJRT_INSTALL_DIR/lib -lgomlx_xlabuilder
  PJRT_PLUGIN_LIBRARY_PATH: $GOPJRT_INSTALL_DIR/lib/gomlx/pjrt
  LD_LIBRARY_PATH: $GOPJRT_INSTALL_DIR/lib 

jobs:

  MergeToMain:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Setup an identity
      run: git config user.email "noreply@github.com" && git config user.name "Github Action"

    - name: Move to the latest version
      run: go get -u 

    - name: Checkout GX to access cgx header files.
      run: |
        cd ..
        git clone https://github.com/gx-org/gx.git

    - name: Install gomlx
      run: curl -sSf https://raw.githubusercontent.com/gomlx/gopjrt/main/cmd/install_linux_amd64.sh | bash

    - name: Tidy (best effort)
      run: go mod tidy || true

    - name: Generating code
      run: go generate ./...

    - name: Tidy (required)
      run: go mod tidy

    - name: Commit generated and modified files
      run: |
        if output=$(git status --porcelain) && [ -z "$output" ]; then
          exit 0
        else
          git add .
          git commit -a -m "Auto-commit after Go file generation."
        fi

    - name: Build
      run: |
        echo "CGO_CFLAGS: $CGO_CFLAGS"
        go build -v ./...

    - name: Test the piper branch
      run: go test -v ./...

    - name: Checkout the main branch
      run: git fetch origin ; git checkout -b main origin/main

    - name: Test the main branch
      run: go test -v ./...

    - name: Merge piper into main
      run: git merge --no-edit piper

    - name: Test after piper merged into main
      run: go test -v ./...

    - name: Push to main
      run: git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
