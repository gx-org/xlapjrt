//go:cgo_ldflag "-labsl_status"
//go:cgo_ldflag "-labsl_statusor"
//go:cgo_ldflag "-L"
//go:cgo_ldflag "/home/runner/work/xlapjrt/xlapjrt/../gopjrtbin/lib"
//go:cgo_ldflag "-lgomlx_xlabuilder"
// Code generated by cmd/cgo; DO NOT EDIT.

package testing

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
//go:linkname _Cgo_keepalive runtime.cgoKeepAlive
//go:noescape
func _Cgo_keepalive(interface{})
//go:linkname _Cgo_no_callback runtime.cgoNoCallback
func _Cgo_no_callback(bool)
type _Ctype___uint64_t = _Ctype_ulong

type _Ctype_cgx_error = _Ctype_cgx_handle

type _Ctype_cgx_handle = _Ctype_uint64_t

type _Ctype_cgx_runtime = _Ctype_cgx_handle

type _Ctype_struct_cgx_runtime_new_result struct {
	runtime	_Ctype_cgx_runtime
	error	_Ctype_cgx_error
}

type _Ctype_uint64_t = _Ctype___uint64_t

type _Ctype_ulong uint64

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
//go:noescape
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
//go:noescape
func _cgoCheckResult(interface{})

//go:cgo_export_dynamic cgx_testing_runtime
//go:linkname _cgoexp_6aad0cebb591_cgx_testing_runtime _cgoexp_6aad0cebb591_cgx_testing_runtime
//go:cgo_export_static _cgoexp_6aad0cebb591_cgx_testing_runtime
func _cgoexp_6aad0cebb591_cgx_testing_runtime(a *struct {
		r0 _Ctype_struct_cgx_runtime_new_result
	}) {
	a.r0 = cgx_testing_runtime()
}
